{"version":3,"sources":["App.tsx","Good.tsx","index.tsx"],"names":["SortType","Good","goods","map","good","React","memo","goodsFromServer","App","state","sortType","NONE","isReversed","reset","setState","reverse","sortByAlphabetically","ALPHABET","sortByLength","LENGTH","this","visibleGoods","sort","a","b","localeCompare","length","console","log","getReorderedGoods","className","type","onClick","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbCC,EAAwB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC/B,OACE,6BACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,WASJC,MAAMC,KAAKL,GDdbM,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGP,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMQ,EAAb,4MACEC,MAAQ,CACNC,SAAUV,EAASW,KACnBC,YAAY,GAHhB,EAMEC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,SAAUV,EAASW,KAAMC,YAAY,KAPzD,EAUEG,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAZzB,EAgBEI,qBAAuB,WACrB,EAAKF,SAAS,CAAEJ,SAAUV,EAASiB,YAjBvC,EAoBEC,aAAe,WACb,EAAKJ,SAAS,CAAEJ,SAAUV,EAASmB,UArBvC,4CAwBE,WACE,MAAiCC,KAAKX,MAA9BG,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,SAEdW,EAxDH,SACLnB,EADK,GAGJ,IADCQ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENS,EAAY,YAAOnB,GAsBzB,OApBAmB,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAKV,EAASiB,SACZ,OAAOM,EAAEE,cAAcD,GAEzB,KAAKxB,EAASmB,OACZ,OAAOI,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO1B,EAASW,SAIlBC,GACFS,EAAaN,UAIfY,QAAQC,IAAIlB,EAAUE,GAEfS,EA8BgBQ,CACnBtB,EACA,CAAEG,WAAUE,eAGd,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASZ,KAAKJ,qBACdc,UAAWG,IACT,iBACA,CAAE,WAAYvB,IAAaV,EAASiB,WALxC,iCAWA,wBACEc,KAAK,SACLC,QAASZ,KAAKF,aACdY,UAAWG,IACT,oBACA,CAAE,WAAYvB,IAAaV,EAASmB,SALxC,4BAWA,wBACEY,KAAK,SACLC,QAASZ,KAAKL,QACde,UAAWG,IACT,oBACA,CAAE,YAAarB,IALnB,sBAWEA,GAAcF,IAAaV,EAASW,OACpC,wBACEoB,KAAK,SACLC,QAASZ,KAAKP,MACdiB,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAM5B,MAAOmB,WA/ErB,GAAyBhB,IAAM6B,WExD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.973b96fa.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport Good from './Good';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortByAlphabetically}\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              onClick={this.reset}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <Good goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nconst Good: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </ul>\n  );\n};\n\nexport default React.memo(Good);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}